
//=============================================================================
//	@file	Fade.h
//	@brief	フェード
//	@autor	相知 拓弥
//	@date	2018/9/28
//=============================================================================

//-----------------------------------------------------------------------------
//	@brief	プリプロセッサ
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
//	@brief	インクルード
//-----------------------------------------------------------------------------
#include "DxLib.h"

//-----------------------------------------------------------------------------
//	@brief	フェードクラス
//-----------------------------------------------------------------------------
class Fade final
{
public:

//===================== 関数 ======================//

	//	デストラクタ
	~Fade();

	//	更新処理
	void Update();

	//	フェード開始
	void IsFadeStart();

	//	インスタンスの生成
	static Fade* GetInstance()
	{
		static Fade s_instance;
		return &s_instance;
	}

private:

//================== シングルトン ==================//

	//	コンストラクタ
	Fade();

//================== 内部処理関数 ==================//

	//	フェードイン
	void _FadeIn();

	//	フェードアウト
	void _FadeOut();

	//	描画
	void _Draw();

//=================== メンバ変数 ===================//

	int		m_alpha;			//	不透明度
	bool	m_isOneTime;		//	開始時のみ
	bool	m_isFadeIn;			//	フェードイン
	bool	m_isFadeOut;		//	フェードアウト
	bool	m_isEndFade;		//	エンドフェード
};

#define FADE Fade::GetInstance()		//	フェードのインスタンス